buildscript {
    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:1.0.10.RELEASE"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'

    // Test coverage
    id 'jacoco'

    // Code style
    id 'checkstyle'

    // PMD
    id 'pmd'

    // PITest
    id 'info.solidsoft.pitest'
}

version '1.0-SNAPSHOT'
sourceCompatibility = 11

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "Hoxton.SR8")
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

dependencies {

    //testCompile group: 'junit', name: 'junit', version: '4.12'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    //runtimeOnly 'mysql:mysql-connector-java'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation('org.junit.jupiter:junit-jupiter:5.5.2')
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.1.0'
    testImplementation('org.assertj:assertj-core:3.14.0')

    runtimeOnly 'org.postgresql:postgresql:42.2.19'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-zuul'

    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'org.springframework.security:spring-security-core'
    implementation 'org.springframework.security:spring-security-web'

    implementation 'org.springframework.security:spring-security-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'


    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
    implementation 'org.springframework.cloud:spring-cloud-openfeign:3.0.5'
}



test {
    useJUnitPlatform()
    jacoco {
        enabled = true
        includes = ['nl.tudelft.sem.template.*']
        excludes = []
    }
}

jacocoTestCoverageVerification() {
    dependsOn test
    violationRules {
        rule {
            enabled = true
            element = 'CLASS'
            includes = ['nl.tudelft.sem.template.*']

            limit {
                counter = 'BRANCH'
                value = 'COVEREDRATIO'
                minimum = 0.1
            }
        }
    }
}

checkstyle {
    toolVersion "8.37"
    configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
}

pmd {
    incrementalAnalysis = true
}

apply plugin: 'info.solidsoft.pitest'
pitest {
    //adds dependency to org.pitest:pitest-junit5-plugin and sets "testPlugin" to "junit5"
    junit5PluginVersion = '0.12'

    targetClasses = ['nl.tudelft.sem.template.*']  //by default "${project.group}.*"
    pitestVersion = '1.5.1' //not needed when a default PIT version should be used
    threads = 4
    outputFormats = ['XML', 'HTML']
    timestampedReports = false
}
